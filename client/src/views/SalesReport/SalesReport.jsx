import React, { useState, useEffect } from "react";
import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from "recharts";
import styles from "./SalesReport.module.css"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏

const API_URL = "http://localhost:3000/sales-report"; // API –±–µ–∫–µ–Ω–¥–∞ (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)

const SalesReport = () => {
  const [monthlySales, setMonthlySales] = useState([]);
  const [bouquetSales, setBouquetSales] = useState([]);
  const [categorySales, setCategorySales] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    // –§–µ–π–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–æ–∫–∞ –Ω–µ—Ç API)
    const fetchData = () => {
      try {
        setTimeout(() => {
          setMonthlySales([
            { month: "–Ø–Ω–≤", sales: 120 },
            { month: "–§–µ–≤", sales: 150 },
            { month: "–ú–∞—Ä", sales: 200 },
            { month: "–ê–ø—Ä", sales: 180 },
            { month: "–ú–∞–π", sales: 250 },
            { month: "–ò—é–Ω", sales: 300 },
            { month: "–ò—é–ª", sales: 270 },
            { month: "–ê–≤–≥", sales: 310 },
            { month: "–°–µ–Ω", sales: 280 },
            { month: "–û–∫—Ç", sales: 320 },
            { month: "–ù–æ—è", sales: 330 },
            { month: "–î–µ–∫", sales: 400 },
          ]);

          setBouquetSales([
            { bouquet: "–†–æ–∑—ã", sales: 350 },
            { bouquet: "–¢—é–ª—å–ø–∞–Ω—ã", sales: 280 },
            { bouquet: "–õ–∏–ª–∏–∏", sales: 150 },
            { bouquet: "–•—Ä–∏–∑–∞–Ω—Ç–µ–º—ã", sales: 100 },
            { bouquet: "–ü–∏–æ–Ω—ã", sales: 220 },
          ]);

          setCategorySales([
            { category: "–°–≤–∞–¥–µ–±–Ω—ã–µ", sales: 500 },
            { category: "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è", sales: 450 },
            { category: "–Æ–±–∏–ª–µ–∏", sales: 300 },
            { category: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã", sales: 200 },
            { category: "–î–µ–∫–æ—Ä", sales: 150 },
          ]);

          setLoading(false);
        }, 1000);
      } catch (err) {
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö");
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) return <p className={styles.loading}>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className={styles.error}>{error}</p>;

  return (
    <div className={styles.reportContainer}>
      <h1>üìä –û—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º</h1>

      {/* –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º */}
      <div className={styles.chart}>
        <h2>–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ—Å—è—Ü–∞–º</h2>
        <ResponsiveContainer width="100%" height={300}>
          <BarChart data={monthlySales}>
            <XAxis dataKey="month" />
            <YAxis />
            <Tooltip />
            <Legend />
            <Bar dataKey="sales" fill="#8884d8" />
          </BarChart>
        </ResponsiveContainer>
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –±—É–∫–µ—Ç–∞–º */}
      <div className={styles.chart}>
        <h2>–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –±—É–∫–µ—Ç–∞–º</h2>
        <ResponsiveContainer width="100%" height={300}>
          <BarChart data={bouquetSales}>
            <XAxis dataKey="bouquet" />
            <YAxis />
            <Tooltip />
            <Legend />
            <Bar dataKey="sales" fill="#82ca9d" />
          </BarChart>
        </ResponsiveContainer>
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <div className={styles.chart}>
        <h2>–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</h2>
        <ResponsiveContainer width="100%" height={300}>
          <PieChart>
            <Pie
              data={categorySales}
              dataKey="sales"
              nameKey="category"
              outerRadius={100}
              fill="#ff7300"
              label
            >
              {categorySales.map((entry, index) => (
                <Cell
                  key={`cell-${index}`}
                  fill={["#ff7300", "#8884d8", "#82ca9d", "#ffc658", "#ff6347"][index]}
                />
              ))}
            </Pie>
            <Tooltip />
            <Legend />
          </PieChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};

export default SalesReport;