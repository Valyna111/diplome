import React, { useState } from "react";
import styles from "./PromotionConstructor.module.css";
import Button from "@/components/Form/Button/Button";
import Input from "@/components/Form/Input/Input";

const initialPromotions = [
  {
    id: 1,
    image: "/images/promotion1.jpg",
    text: "–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ –±—É–∫–µ—Ç—ã!",
  },
  {
    id: 2,
    image: "/images/promotion2.jpg",
    text: "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 3000 —Ä—É–±–ª–µ–π.",
  },
];

const PromotionConstructor = () => {
  const [promotions, setPromotions] = useState(initialPromotions);
  const [selectedPromotion, setSelectedPromotion] = useState(null);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∞–∫—Ü–∏–∏
  const handleAddPromotion = () => {
    setSelectedPromotion({
      id: Date.now(),
      image: "",
      text: "",
    });
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ü–∏–∏
  const handleDeletePromotion = (id) => {
    setPromotions(promotions.filter((promotion) => promotion.id !== id));
    setSelectedPromotion(null);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∞–∫—Ü–∏–∏
  const handleSavePromotion = () => {
    if (selectedPromotion.id) {
      const exists = promotions.find((promotion) => promotion.id === selectedPromotion.id);
      if (exists) {
        setPromotions(
          promotions.map((promotion) =>
            promotion.id === selectedPromotion.id ? selectedPromotion : promotion
          )
        );
      } else {
        setPromotions([...promotions, selectedPromotion]);
      }
      setSelectedPromotion(null);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageUpload = (e) => {
    const file = e.target.files[0];
    if (file) {
      const imageUrl = URL.createObjectURL(file);
      setSelectedPromotion({ ...selectedPromotion, image: imageUrl });
    }
  };

  return (
    <div className={styles.container}>
      {/* üîπ –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ (—Å–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π) */}
      <div className={styles.leftColumn}>
        <Button className={styles.addButton} onClick={handleAddPromotion} placeholder="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ü–∏—é" />

        <div className={styles.promotionsList}>
          {promotions.map((promotion) => (
            <div
              key={promotion.id}
              className={styles.promotionCard}
              onClick={() => setSelectedPromotion(promotion)}
            >
              <img
                src={promotion.image || "/placeholder.jpg"}
                alt={promotion.text}
                className={styles.promotionImage}
              />
              <p>{promotion.text}</p>
            </div>
          ))}
        </div>
      </div>

      {/* üîπ –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ (—Ñ–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) */}
      {selectedPromotion && (
        <div className={styles.rightColumn}>
          <h2>{selectedPromotion.id ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ü–∏—é" : "–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ü–∏—é"}</h2>

          {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
          <div className={styles.imageUploadContainer}>
            <input type="file" accept="image/*" onChange={handleImageUpload} />
            <Button
              className={styles.uploadButton}
              onClick={() => document.querySelector("input[type='file']").click()}
              placeholder="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
            />
            {selectedPromotion.image && (
              <img
                src={selectedPromotion.image}
                alt="Preview"
                className={styles.previewImage}
              />
            )}
          </div>

          {/* –ü–æ–ª–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∞–∫—Ü–∏–∏ */}
          <div className={styles.inputGroup}>
            <Input
              id="promotion-text"
              value={selectedPromotion.text}
              onChange={(e) =>
                setSelectedPromotion({ ...selectedPromotion, text: e.target.value })
              }
              placeholder="–¢–µ–∫—Å—Ç –∞–∫—Ü–∏–∏"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className={styles.buttonGroup}>
            <Button
              className={styles.publishButton}
              onClick={handleSavePromotion}
              placeholder="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
            />
            <Button
              className={styles.deleteButton}
              onClick={() => handleDeletePromotion(selectedPromotion.id)}
              placeholder="üóë –£–¥–∞–ª–∏—Ç—å"
              type="second"
            />
          </div>
        </div>
      )}
    </div>
  );
};

export default PromotionConstructor;