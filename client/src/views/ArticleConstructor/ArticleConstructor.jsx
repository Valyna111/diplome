import { useState } from "react";
import styles from "./ArticleConstructor.module.css";
import Button from "@/components/Form/Button/Button";
import Input from "@/components/Form/Input/Input";

const initialArticles = [
  {
    id: 1,
    images: ["", "", ""],
    title: "–ö–∞–∫ –ø—Ä–æ–¥–ª–∏—Ç—å –∂–∏–∑–Ω—å –±—É–∫–µ—Ç–∞",
    sections: [
      { title: "–û–±—Ä–µ–∑–∫–∞ —Å—Ç–µ–±–ª–µ–π", text: "–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–∫–µ—Ç –≤ –≤–∞–∑—É, –ø–æ–¥—Ä–µ–∂—å—Ç–µ —Å—Ç–µ–±–ª–∏ –ø–æ–¥ —É–≥–ª–æ–º 45 –≥—Ä–∞–¥—É—Å–æ–≤." },
      { title: "–ß–∏—Å—Ç–∞—è –≤–æ–¥–∞", text: "–ú–µ–Ω—è–π—Ç–µ –≤–æ–¥—É –∫–∞–∂–¥—ã–µ –¥–≤–∞ –¥–Ω—è –∏ –ø—Ä–æ–º—ã–≤–∞–π—Ç–µ –≤–∞–∑—É, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏–µ –±–∞–∫—Ç–µ—Ä–∏–π." },
      { title: "–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", text: "–ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä—è–º—ã—Ö —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –ª—É—á–µ–π –∏ —Å–∫–≤–æ–∑–Ω—è–∫–æ–≤, —á—Ç–æ–±—ã —Ü–≤–µ—Ç—ã –Ω–µ —É–≤—è–¥–∞–ª–∏ —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏." }
    ]
  }
];

const ArticleConstructor = () => {
  const [articles, setArticles] = useState(initialArticles);
  const [selectedArticle, setSelectedArticle] = useState(null);

  const handleAddArticle = () => {
    setSelectedArticle({
      id: Date.now(),
      images: ["", "", ""],
      title: "",
      sections: [
        { title: "", text: "" },
        { title: "", text: "" },
        { title: "", text: "" }
      ]
    });
  };

  const handleDeleteArticle = (id) => {
    setArticles(articles.filter(article => article.id !== id));
    setSelectedArticle(null);
  };

  const handlePublishArticle = () => {
    if (selectedArticle.id) {
      const exists = articles.find(article => article.id === selectedArticle.id);
      if (exists) {
        setArticles(articles.map(article => article.id === selectedArticle.id ? selectedArticle : article));
      } else {
        setArticles([...articles, selectedArticle]);
      }
      setSelectedArticle(null);
    }
  };

  const handleImageUpload = (e, index) => {
    const file = e.target.files[0];
    if (file) {
      const imageUrl = URL.createObjectURL(file);
      const updatedImages = [...selectedArticle.images];
      updatedImages[index] = imageUrl;
      setSelectedArticle({ ...selectedArticle, images: updatedImages });
    }
  };

  return (
    <div className={styles.container}>
      {/* üîπ –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ (—Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π) */}
      <div className={styles.leftColumn}>
        <Button className={styles.addButton} onClick={handleAddArticle} placeholder="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é" />

        <div className={styles.articlesList}>
          {articles.map(article => (
            <div key={article.id} className={styles.articleCard} onClick={() => setSelectedArticle(article)}>
              <img src={article.images[0] || "/placeholder.jpg"} alt={article.title} className={styles.articleImage} />
              <h3>{article.title}</h3>
            </div>
          ))}
        </div>
      </div>

      {/* üîπ –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ (—Ñ–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) */}
      {selectedArticle && (
        <div className={styles.rightColumn}>
          <h2>{selectedArticle.id ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é" : "–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é"}</h2>

          {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          <div className={styles.imageUploadContainer}>
            {selectedArticle.images.map((img, index) => (
              <div key={index} className={styles.imageUpload}>
                <input type="file" accept="image/*" onChange={(e) => handleImageUpload(e, index)} />
                <Button className={styles.uploadButton} onClick={() => document.getElementsByTagName("input")[index].click()} placeholder="–ó–∞–≥—Ä—É–∑–∏—Ç—å" />
                {img && <img src={img} alt={`Preview ${index + 1}`} className={styles.previewImage} />}
              </div>
            ))}
          </div>

          {/* –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è */}
          <div className={styles.inputGroup}>
            <Input
              id="article-title"
              value={selectedArticle.title}
              onChange={e => setSelectedArticle({ ...selectedArticle, title: e.target.value })}
              placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏"
            />

            {selectedArticle.sections.map((section, index) => (
              <div key={index} className={styles.sectionBlock}>
                <Input
                  id={`article-section${index}-text`}
                  value={section.text}
                  onChange={e => {
                    const updatedSections = [...selectedArticle.sections];
                    updatedSections[index].text = e.target.value;
                    setSelectedArticle({ ...selectedArticle, sections: updatedSections });
                  }}
                  placeholder={`–û–ø–∏—Å–∞–Ω–∏–µ ${index + 1}`}
                />
              </div>
            ))}
          </div>

          <div className={styles.buttonGroup}>
            <Button className={styles.publishButton} onClick={handlePublishArticle} placeholder="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å" />
            <Button className={styles.deleteButton} onClick={() => handleDeleteArticle(selectedArticle.id)} placeholder="üóë –£–¥–∞–ª–∏—Ç—å" type="second" />
          </div>
        </div>
      )}
    </div>
  );
};

export default ArticleConstructor;
